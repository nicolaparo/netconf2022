@page "/contacts"
@using NicolaParo.NetConf2022.NotificationSender.Models;
@using NicolaParo.NetConf2022.NotificationSender.Services.Repositories;
@using Microsoft.AspNetCore.Components.QuickGrid;

@inject IContactsRepository contactsRepository

<div class="mx-auto mb-4 w-50">
    <input type="text" class="form-control" placeholder="Search..." @bind="@searchValue" @bind:event="oninput" @bind:after="() => SearchAsync()" />
</div>

<div class="row">
    @if (contacts is not null)
    {
        @foreach (var contact in contacts)
        {
            <div class="col-4">
                <div class="card mb-4 p-3">
                    <div class="card-body">
                        <ContactDisplay Contact="contact" />
                    </div>
                    <div class="card-footer">
                        <a class="btn btn-info" href="/compose/@contact.Id">
                            Send Notification
                        </a>
                    </div>
                </div>
            </div>
        }
    }
</div>

@code {
    private string searchValue;

    private IQueryable<Contact> contacts;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            contacts = (await contactsRepository.GetContactsAsync()).AsQueryable();
            StateHasChanged();
        }
    }

    public async Task SearchAsync()
    {
        contacts = (await contactsRepository.GetContactsAsync())
            .Where(c => c.FullName.ToLower().Contains(searchValue))
            .AsQueryable();
        StateHasChanged();
    }

}
